
"swagger": "2.0"
"info":
  "version": "1.0.0"
  "title": "Task Management API"
  "description": "This is a simple Task Management API based on NodeJs, that was developed for a interview test. You can see more in the documentation of the github page.\n\n\nSome useful links:\n- [The Task API Repository](https://github.com/Werbm/tasks-api)"
  "contact":
    "email": "werbmdev@outlook.com"
"host": "localhost:3001"
"schemes":
  - "https"
"tags":
  -
    "name": "Authentication"
    "description": "Register and Login"
  -
    "name": "Tasks"
    "description": "API Methods"
"paths":
  "/auth/register":
    "post":
      "tags":
        - "Authentication"
      "summary": "Creates a new user."
      "parameters":
        -
          "in": "body"
          "name": "user"
          "required": true
          "schema":
            "type": "object"
            "properties":
              "user":
                "type": "string"
              "password":
                "type": "string"
              "email":
                "type": "string"
      "responses":
        201:
          "description": "User Registered"
        400:
          "description": "User already registered"
  "/auth/login":
    "post":
      "tags":
        - "Authentication"
      "summary": "Log-in user."
      "description": "Authenticate a user and return a token."
      "parameters":
        -
          "in": "body"
          "name": "user"
          "required": true
          "schema":
            "type": "object"
            "properties":
              "email":
                "type": "string"
              "password":
                "type": "string"
      "responses":
        201:
          "description": "Token Generated"
          "schema":
            "type": "object"
            "properties":
              "email":
                "type": "string"
              "token":
                "type": "string"
        401:
          "description": "Unauthorized"
        404:
          "description": "User not registered"
        406:
          "description": "Password is incorrect"
  "/task":
    "get":
      "tags":
        - "Tasks"
      "summary": "Get all tasks"
      "description": "Fetches a list of all tasks."
      "responses":
        200:
          "description": "Fetched"
          "schema":
            "type": "array"
            "items":
              "type": "object"
              "properties":
                "id":
                  "type": "string"
                "title":
                  "type": "string"
                "description":
                  "type": "string"
                "status":
                  "type": "string"
                  "enum":
                    - "pending"
                    - "done"
                "startDate":
                  "type": "string"
                  "format": "date-time"
                "updatingDate":
                  "type": "string"
                  "format": "date-time"
        401:
          "description": "Unauthorized"
        204:
          "description": "No Content"
    "post":
      "tags":
        - "Tasks"
      "summary": "Create a new task"
      "description": "Adds a new task to the database."
      "parameters":
        -
          "in": "body"
          "name": "task"
          "required": true
          "schema":
            "type": "object"
            "properties":
              "title":
                "type": "string"
              "description":
                "type": "string"
              "status":
                "type": "string"
                "enum":
                  - "pending"
                  - "done"
                "default": "pending"
      "responses":
        201:
          "description": "Success creating task"
  "/tasks/:id":
    "delete":
      "tags":
        - "Tasks"
      "summary": "Delete a task"
      "description": "Deletes a task from the database."
      "responses":
        204:
          "description": "Deleted Successfully"
        404:
          "description": "Not Found"
    "get":
      "tags":
        - "Tasks"
      "summary": "Get task by id"
      "description": "Fetch a task based on the ID."
      "responses":
        200:
          "description": "Fetched"
          "schema":
            "type": "array"
            "items":
              "type": "object"
              "properties":
                "id":
                  "type": "string"
                "title":
                  "type": "string"
                "description":
                  "type": "string"
                "status":
                  "type": "string"
                  "enum":
                    - "pending"
                    - "done"
                "startDate":
                  "type": "string"
                  "format": "date-time"
                "updatingDate":
                  "type": "string"
                  "format": "date-time"
        404:
          "description": "Not Found"
    "put":
      "tags":
        - "Tasks"
      "summary": "Update a task."
      "description": "Updates a task based on the id."
      "responses":
        200:
          "description": "Updated"
          "schema":
            "type": "array"
            "items":
              "type": "object"
              "properties":
                "id":
                  "type": "string"
                "title":
                  "type": "string"
                "description":
                  "type": "string"
                "status":
                  "type": "string"
                  "enum":
                    - "pending"
                    - "done"
                "startDate":
                  "type": "string"
                  "format": "date-time"
                "updatingDate":
                  "type": "string"
                  "format": "date-time"
        404:
          "description": "Not Found"